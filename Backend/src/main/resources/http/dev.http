### A simple get request to the test endpoint. No need for login
GET http://localhost:7070/api/auth/test/

### Create a new user - this one will only get a USER role by default
POST http://localhost:7070/api/auth/register/
Content-Type: application/json

{
  "username": "user",
  "password": "test123",
  "email": "user123@example.com"
}


###
POST http://localhost:7070/api/auth/login/

{
    "username": "user",
    "password": "test123"
}

> {%
    client.global.set("jwt_token", response.body.token);
    //console.log("JWT Token:", client.global.get("jwt_token"));
%}

###
GET http://localhost:7070/api/protected/user_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET http://localhost:7070/api/protected/admin_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Add admin role to user
POST http://localhost:7070/api/auth/user/1/addrole/
Accept: application/json
Authorization: Bearer {{jwt_token}}

{
    "role": "admin"
}
Accept: application/json
Authorization: Bearer {{jwt_token}}

###




=======
//Player Account

GET http://localhost:7070/api/player-accounts
Authorization: Bearer {{jwt_token}}
###

GET http://localhost:7070/api/player-accounts/1
Authorization: Bearer {{jwt_token}}
###

POST http://localhost:7070/api/player-accounts
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "playerAccountName": "ProGamer123",
  "game": "LEAGUE_OF_LEGENDS",
  "rank": "DIAMOND"
}

###

PUT http://localhost:7070/api/player-accounts/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "playerAccountName": "ProGamer123",
  "game": "LEAGUE_OF_LEGENDS",
  "rank": "DIAMOND",
  "active": true
}

###

DELETE http://localhost:7070/api/player-accounts/1
Authorization: Bearer {{jwt_token}}

###

//Team

GET http://localhost:7070/api/teams
Authorization: Bearer {{jwt_token}}
###

GET http://localhost:7070/api/teams/1
Authorization: Bearer {{jwt_token}}
###

POST http://localhost:7070/api/teams
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
    "teamName": "ProGamerTeam"
}

###

PUT http://localhost:7070/api/teams/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "teamName": "ProGamer1234"
}

###

DELETE http://localhost:7070/api/teams/1
Authorization: Bearer {{jwt_token}}

###

//TournamentTeam

GET http://localhost:7070/api/tournament-teams
Authorization: Bearer {{jwt_token}}
###

GET http://localhost:7070/api/tournament-teams/1
Authorization: Bearer {{jwt_token}}
###

POST http://localhost:7070/api/tournament-teams
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "tournamentTeamName": "ProGamerTeam",
  "game": "LEAGUE_OF_LEGENDS"
}

###

PUT http://localhost:7070/api/tournament-teams/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "tournamentTeamName": "ProGamer1234",
  "game": "LEAGUE_OF_LEGENDS"
}

###

DELETE http://localhost:7070/api/tournament-teams/1
Authorization: Bearer {{jwt_token}}

###


//Tournament

GET http://localhost:7070/api/tournaments
Authorization: Bearer {{jwt_token}}
###

GET http://localhost:7070/api/tournaments/1
Authorization: Bearer {{jwt_token}}
###

POST http://localhost:7070/api/tournaments
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "tournamentName": "rgege",
  "game": "COUNTER_STRIKE",
  "tournamentSize": 16,
  "teamSize": 5,
  "prizePool": 10000,
  "rules": "No cheating",
  "entryRequirements": "Over 18",
  "tournamentStatus": "NOT_STARTED",
  "startDate": "2023-10-01",
  "startTime": "12:00",
  "endDate": "2023-10-31",
  "endTime": "18:00",
  "host": {
    "id": 1
  }
}

###

PUT http://localhost:7070/api/tournaments/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "tournamentName": "ProGamerTournament",
  "game": "DOTA_2",
  "tournamentSize": 2,
  "teamSize": 2,
  "rules": "No cheating, no toxicity",
  "entryRequirements": "Must be a registered player",
  "status": "ACTIVE",
  "startDate": "2023-10-01T10:00:00Z",
  "startTime": "2023-10-01T10:00:00Z",
  "endDate": "2023-10-31T10:00:00Z",
  "endTime": "2023-10-31T10:00:00Z"
}

###

DELETE http://localhost:7070/api/tournaments/1
Authorization: Bearer {{jwt_token}}

//Notifications

###

# Her opretter vi en notifikation for brugeren der er logget ind
POST http://localhost:7070/api/notifications
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "notificationType": "INVITATION",
  "notificationTitle": "Du er blevet inviteret til holdet",
  "read": false,
  "link": "/teams/1",
  "teamId": 1,
  "invitationId": 42,
  "senderId": 1001
}

###

# Her henter vi alle notifikationer for brugeren der er logget ind
GET http://localhost:7070/api/notifications
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

###

# Her markérer vi en notifikation som læst
PUT http://localhost:7070/api/notifications/1/read
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

###

### Marker alle notifikationer som læst
PUT http://localhost:7070/api/notifications/markallasread
Authorization: Bearer {{jwt_token}}
Content-Type: application/json


